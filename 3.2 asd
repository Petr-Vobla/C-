using System;

public abstract class BaseArray
{
    public abstract void Initialize(bool fillByUser = false);
    public abstract double GetAverage();
    public abstract void PrintArray();
}

public sealed class OneDimensionalArray : BaseArray
{
    private int[] array;

    public override void Initialize(bool fillByUser = false)
    {
        Console.WriteLine("Создвние одномерного массива:");
        Console.Write("Введите длину массива:");
        int length = int.Parse(Console.ReadLine());
        array = new int[length];

        if (fillByUser)
        {
            for (int i = 0; i < array.Length; i++)
            {
                Console.Write($"Введите элемент под номером: {i + 1}: ");
                array[i] = int.Parse(Console.ReadLine());
            }
        }
        else
        {
            Random random = new Random();

            for (int i = 0; i < array.Length; i++)
            {
                array[i] = random.Next(100);
            }
        }
    }

    public override double GetAverage()
    {
        double sum = 0;

        foreach (int value in array)
        {
            sum += value;
        }

        return sum / array.Length;
    }

    public override void PrintArray()
    {
        Console.WriteLine("Вывод одномерного массива:");
        foreach (int value in array)
        {
            Console.Write(value + " ");
        }

        Console.WriteLine();
    }
}

public sealed class MultiDimensionalArray : BaseArray
{
    private int[,] array;

    public override void Initialize(bool fillByUser = false)
    {
        Console.WriteLine("Создание матрицы:");
        Console.Write("Введите количество рядов: ");
        int rows = int.Parse(Console.ReadLine());
        Console.Write("Введите количество строчек: ");
        int columns = int.Parse(Console.ReadLine());
        array = new int[rows, columns];

        if (fillByUser)
        {
            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                {
                    Console.Write($"Введите элемент под номером: [{i + 1}, {j + 1}]: ");
                    array[i, j] = int.Parse(Console.ReadLine());
                }
            }
        }
        else
        {
            Random random = new Random();

            for (int i = 0; i < array.GetLength(0); i++)
            {
                for (int j = 0; j < array.GetLength(1); j++)
                {
                    array[i, j] = random.Next(100);
                }
            }
        }
    }

    public override double GetAverage()
    {
        double sum = 0;

        for (int i = 0; i < array.GetLength(0); i++)
        {
            for (int j = 0; j < array.GetLength(1); j++)
            {
                sum += array[i, j];
            }
        }

        return sum / (array.GetLength(0) * array.GetLength(1));
    }

    public override void PrintArray()
    {
        Console.WriteLine("Вывод матрицы:");
        for (int i = 0; i < array.GetLength(0); i++)
        {
            for (int j = 0; j < array.GetLength(1); j++)
            {
                Console.Write(array[i, j] + " ");
            }
            Console.WriteLine();
        }
    }
}
public sealed class JaggedArray : BaseArray
{
    private int[][] array;

    public override void Initialize(bool fillByUser = false)
    {
        Console.WriteLine("Создание ступенчатого массива");
        Console.Write("Введите количество рядов: ");
        int rows = int.Parse(Console.ReadLine());
        array = new int[rows][];

        for (int i = 0; i < array.Length; i++)
        {
            Console.Write($"Введите количество элементов в ряду: {i + 1}: ");
            int length = int.Parse(Console.ReadLine());
            array[i] = new int[length];

            if (fillByUser)
            {
                for (int j = 0; j < array[i].Length; j++)
                {
                    Console.Write($"Введите элемент {i + 1} под номером {j + 1}: ");
                    array[i][j] = int.Parse(Console.ReadLine());
                }
            }
            else
            {
                Random random = new Random();

                for (int j = 0; j < array[i].Length; j++)
                {
                    array[i][j] = random.Next(100);
                }
            }
        }
    }

    public override double GetAverage()
    {
        double sum = 0;
        int elementsCount = 0;

        for (int i = 0; i < array.Length; i++)
        {
            for (int j = 0; j < array[i].Length; j++)
            {
                sum += array[i][j];
                elementsCount++;
            }
        }

        return sum / elementsCount;
    }

    public override void PrintArray()
    {
        Console.WriteLine("Вывод ступенчатого массива");
        for (int i = 0; i < array.Length; i++)
        {
            for (int j = 0; j < array[i].Length; j++)
            {
                Console.Write(array[i][j] + " ");
            }
            Console.WriteLine();
        }
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        BaseArray[] array = new BaseArray[3];
        array[0] = new OneDimensionalArray();
        array[1] = new MultiDimensionalArray();
        array[2] = new JaggedArray();

        for (int i = 0; i < array.Length; i++)
        {
            array[i].Initialize();
            double average = array[i].GetAverage();
            Console.WriteLine($"Среднее: {average}");
            array[i].PrintArray();
        }
    }
}
